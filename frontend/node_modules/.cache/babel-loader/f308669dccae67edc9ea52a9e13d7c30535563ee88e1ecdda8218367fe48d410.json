{"ast":null,"code":"'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { AvatarGroup } from './AvatarGroup/AvatarGroup.mjs';\nimport { useAvatarGroupContext } from './AvatarGroup/AvatarGroup.context.mjs';\nimport { AvatarPlaceholderIcon } from './AvatarPlaceholderIcon.mjs';\nimport classes from './Avatar.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    size,\n    radius,\n    variant,\n    gradient,\n    color,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || \"gray\",\n    theme,\n    gradient,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--avatar-size\": getSize(size, \"avatar-size\"),\n      \"--avatar-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--avatar-bg\": color || variant ? colors.background : void 0,\n      \"--avatar-color\": color || variant ? colors.color : void 0,\n      \"--avatar-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Avatar = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Avatar\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    src,\n    alt,\n    radius,\n    color,\n    gradient,\n    imageProps,\n    children,\n    autoContrast,\n    ...others\n  } = props;\n  const ctx = useAvatarGroupContext();\n  const [error, setError] = useState(!src);\n  const getStyles = useStyles({\n    name: \"Avatar\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  useEffect(() => setError(!src), [src]);\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    mod: {\n      \"within-group\": ctx.withinGroup\n    },\n    ref,\n    ...others\n  }, error ? /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"placeholder\"),\n    title: alt\n  }, children || /* @__PURE__ */React.createElement(AvatarPlaceholderIcon, null)) : /* @__PURE__ */React.createElement(\"img\", {\n    ...imageProps,\n    ...getStyles(\"image\"),\n    src,\n    alt,\n    onError: event => {\n      var _imageProps$onError;\n      setError(true);\n      imageProps === null || imageProps === void 0 || (_imageProps$onError = imageProps.onError) === null || _imageProps$onError === void 0 || _imageProps$onError.call(imageProps, event);\n    }\n  }));\n});\nAvatar.classes = classes;\nAvatar.displayName = \"@mantine/core/Avatar\";\nAvatar.Group = AvatarGroup;\nexport { Avatar };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","_ref","size","radius","variant","gradient","color","autoContrast","colors","variantColorResolver","root","getSize","getRadius","background","border","Avatar","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","src","alt","imageProps","children","others","ctx","useAvatarGroupContext","error","setError","useState","getStyles","useStyles","name","classes","useEffect","React","createElement","Box","mod","withinGroup","title","AvatarPlaceholderIcon","onError","event","_imageProps$onError","call","displayName","Group","AvatarGroup"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Avatar/Avatar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AvatarGroup } from './AvatarGroup/AvatarGroup';\nimport { useAvatarGroupContext } from './AvatarGroup/AvatarGroup.context';\nimport { AvatarPlaceholderIcon } from './AvatarPlaceholderIcon';\nimport classes from './Avatar.module.css';\n\nexport type AvatarStylesNames = 'root' | 'placeholder' | 'image';\nexport type AvatarVariant =\n  | 'filled'\n  | 'light'\n  | 'gradient'\n  | 'outline'\n  | 'transparent'\n  | 'default'\n  | 'white';\n\nexport type AvatarCssVariables = {\n  root: '--avatar-size' | '--avatar-radius' | '--avatar-bg' | '--avatar-color' | '--avatar-bd';\n};\n\nexport interface AvatarProps extends BoxProps, StylesApiProps<AvatarFactory> {\n  /** Width and height of the avatar, numbers are converted to rem, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `'100%'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Image url, if the image cannot be loaded or `src={null}`, then placeholder is displayed instead */\n  src?: string | null;\n\n  /** Image `alt` attribute, also used as `title` attribute for placeholder */\n  alt?: string;\n\n  /** `img` tag attributes */\n  imageProps?: React.ComponentPropsWithoutRef<'img'>;\n\n  /** Avatar placeholder, displayed when `src={null}` or when the image cannot be loaded */\n  children?: React.ReactNode;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type AvatarFactory = PolymorphicFactory<{\n  props: AvatarProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: AvatarStylesNames;\n  vars: AvatarCssVariables;\n  variant: AvatarVariant;\n  staticComponents: {\n    Group: typeof AvatarGroup;\n  };\n}>;\n\nconst defaultProps: Partial<AvatarProps> = {};\n\nconst varsResolver = createVarsResolver<AvatarFactory>(\n  (theme, { size, radius, variant, gradient, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || 'gray',\n      theme,\n      gradient,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--avatar-size': getSize(size, 'avatar-size'),\n        '--avatar-radius': radius === undefined ? undefined : getRadius(radius),\n        '--avatar-bg': color || variant ? colors.background : undefined,\n        '--avatar-color': color || variant ? colors.color : undefined,\n        '--avatar-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Avatar = polymorphicFactory<AvatarFactory>((_props, ref) => {\n  const props = useProps('Avatar', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    src,\n    alt,\n    radius,\n    color,\n    gradient,\n    imageProps,\n    children,\n    autoContrast,\n    ...others\n  } = props;\n  const ctx = useAvatarGroupContext();\n  const [error, setError] = useState(!src);\n\n  const getStyles = useStyles<AvatarFactory>({\n    name: 'Avatar',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  useEffect(() => setError(!src), [src]);\n\n  return (\n    <Box {...getStyles('root')} mod={{ 'within-group': ctx.withinGroup }} ref={ref} {...others}>\n      {error ? (\n        <span {...getStyles('placeholder')} title={alt}>\n          {children || <AvatarPlaceholderIcon />}\n        </span>\n      ) : (\n        <img\n          {...imageProps}\n          {...getStyles('image')}\n          src={src!}\n          alt={alt}\n          onError={(event) => {\n            setError(true);\n            imageProps?.onError?.(event);\n          }}\n        />\n      )}\n    </Box>\n  );\n});\n\nAvatar.classes = classes;\nAvatar.displayName = '@mantine/core/Avatar';\nAvatar.Group = AvatarGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}