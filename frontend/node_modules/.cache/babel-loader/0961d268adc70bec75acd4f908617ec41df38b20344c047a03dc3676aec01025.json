{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Skeleton.module.css.mjs';\nconst defaultProps = {\n  visible: true,\n  animate: true\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    width,\n    height,\n    radius,\n    circle\n  } = _ref;\n  return {\n    root: {\n      \"--skeleton-height\": rem(height),\n      \"--skeleton-width\": circle ? rem(height) : rem(width),\n      \"--skeleton-radius\": circle ? \"1000px\" : radius === void 0 ? void 0 : getRadius(radius)\n    }\n  };\n});\nconst Skeleton = factory((_props, ref) => {\n  const props = useProps(\"Skeleton\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    width,\n    height,\n    circle,\n    visible,\n    radius,\n    animate,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Skeleton\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    mod: {\n      visible,\n      animate\n    },\n    ...others\n  });\n});\nSkeleton.classes = classes;\nSkeleton.displayName = \"@mantine/core/Skeleton\";\nexport { Skeleton };","map":{"version":3,"names":["defaultProps","visible","animate","varsResolver","createVarsResolver","_","_ref","width","height","radius","circle","root","rem","getRadius","Skeleton","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","others","getStyles","useStyles","name","classes","React","createElement","Box","mod","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Skeleton/Skeleton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Skeleton.module.css';\n\nexport type SkeletonStylesNames = 'root';\nexport type SkeletonCssVariables = {\n  root: '--skeleton-width' | '--skeleton-height' | '--skeleton-radius';\n};\n\nexport interface SkeletonProps\n  extends BoxProps,\n    StylesApiProps<SkeletonFactory>,\n    ElementProps<'div'> {\n  /** Determines whether Skeleton overlay should be displayed, `true` by default */\n  visible?: boolean;\n\n  /** Skeleton `height`, numbers are converted to rem, `auto` by default */\n  height?: React.CSSProperties['height'];\n\n  /** Skeleton `width`, numbers are converted to rem, `100%` by default, ignored when `circle` prop is set */\n  width?: React.CSSProperties['width'];\n\n  /** If set, Skeleton `width` and `border-radius` are equal to its `height`, `false` by default */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: React.CSSProperties['borderRadius'];\n\n  /** Determines whether Skeleton should be animated, `true` by default */\n  animate?: boolean;\n}\n\nexport type SkeletonFactory = Factory<{\n  props: SkeletonProps;\n  ref: HTMLDivElement;\n  stylesNames: SkeletonStylesNames;\n  vars: SkeletonCssVariables;\n}>;\n\nconst defaultProps: Partial<SkeletonProps> = {\n  visible: true,\n  animate: true,\n};\n\nconst varsResolver = createVarsResolver<SkeletonFactory>(\n  (_, { width, height, radius, circle }) => ({\n    root: {\n      '--skeleton-height': rem(height),\n      '--skeleton-width': circle ? rem(height) : rem(width),\n      '--skeleton-radius': circle ? '1000px' : radius === undefined ? undefined : getRadius(radius),\n    },\n  })\n);\n\nexport const Skeleton = factory<SkeletonFactory>((_props, ref) => {\n  const props = useProps('Skeleton', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    width,\n    height,\n    circle,\n    visible,\n    radius,\n    animate,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SkeletonFactory>({\n    name: 'Skeleton',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} mod={{ visible, animate }} {...others} />;\n});\n\nSkeleton.classes = classes;\nSkeleton.displayName = '@mantine/core/Skeleton';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,CAAC,EAAAC,IAAA;EAAA,IAAE;IAAEC,KAAK;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAE,GAAAJ,IAAA;EAAA,OAAM;IACzCK,IAAI,EAAE;MACJ,mBAAmB,EAAEC,GAAG,CAACJ,MAAM,CAAC;MAChC,kBAAkB,EAAEE,MAAM,GAAGE,GAAG,CAACJ,MAAM,CAAC,GAAGI,GAAG,CAACL,KAAK,CAAC;MACrD,mBAAmB,EAAEG,MAAM,GAAG,QAAQ,GAAGD,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGI,SAAS,CAACJ,MAAM;IACvF;EACL,CAAG;AAAA,CACH,CAAC;AACW,MAACK,QAAQ,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC/C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,UAAU,EAAEnB,YAAY,EAAEgB,MAAM,CAAC;EACxD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJlB,KAAK;IACLC,MAAM;IACNE,MAAM;IACNT,OAAO;IACPQ,MAAM;IACNP,OAAO;IACP,GAAGwB;EACJ,IAAGR,KAAK;EACT,MAAMS,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,UAAU;IAChBC,OAAO;IACPZ,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJtB;EACJ,CAAG,CAAC;EACF,OAAuB,eAAA4B,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAEhB,GAAG;IAAE,GAAGU,SAAS,CAAC,MAAM,CAAC;IAAEO,GAAG,EAAE;MAAEjC,OAAO;MAAEC;IAAS;IAAE,GAAGwB;EAAQ,EAAC;AACtH,CAAC,CAAE;AACHZ,QAAQ,CAACgB,OAAO,GAAGA,OAAO;AAC1BhB,QAAQ,CAACqB,WAAW,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}