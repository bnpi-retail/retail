{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children.mjs';\nimport classes from './Group.module.css.mjs';\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: \"md\",\n  align: \"center\",\n  justify: \"flex-start\",\n  wrap: \"wrap\"\n};\nconst varsResolver = createVarsResolver((_, _ref, _ref2) => {\n  let {\n    grow,\n    preventGrowOverflow,\n    gap,\n    align,\n    justify,\n    wrap\n  } = _ref;\n  let {\n    childWidth\n  } = _ref2;\n  return {\n    root: {\n      \"--group-child-width\": grow && preventGrowOverflow ? childWidth : void 0,\n      \"--group-gap\": getSpacing(gap),\n      \"--group-align\": align,\n      \"--group-justify\": justify,\n      \"--group-wrap\": wrap\n    }\n  };\n});\nconst Group = factory((_props, ref) => {\n  const props = useProps(\"Group\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    ...others\n  } = props;\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap !== null && gap !== void 0 ? gap : \"md\");\n  const childWidth = \"calc(\".concat(100 / childrenCount, \"% - (\").concat(resolvedGap, \" - \").concat(resolvedGap, \" / \").concat(childrenCount, \"))\");\n  const stylesCtx = {\n    childWidth\n  };\n  const getStyles = useStyles({\n    name: \"Group\",\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    ref,\n    variant,\n    mod: {\n      grow\n    },\n    size: __size,\n    ...others\n  }, filteredChildren);\n});\nGroup.classes = classes;\nGroup.displayName = \"@mantine/core/Group\";\nexport { Group };","map":{"version":3,"names":["defaultProps","preventGrowOverflow","gap","align","justify","wrap","varsResolver","createVarsResolver","_","_ref","_ref2","grow","childWidth","root","getSpacing","Group","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","children","vars","variant","__size","others","filteredChildren","filterFalsyChildren","childrenCount","length","resolvedGap","concat","stylesCtx","getStyles","useStyles","name","classes","React","createElement","Box","mod","size","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Group/Group.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children';\nimport classes from './Group.module.css';\n\nexport type GroupStylesNames = 'root';\nexport type GroupCssVariables = {\n  root:\n    | '--group-gap'\n    | '--group-align'\n    | '--group-justify'\n    | '--group-wrap'\n    | '--group-child-width';\n};\n\nexport interface GroupStylesCtx {\n  childWidth: string;\n}\n\nexport interface GroupProps extends BoxProps, StylesApiProps<GroupFactory>, ElementProps<'div'> {\n  __size?: any;\n\n  /** Controls `justify-content` CSS property, `'flex-start'` by default */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Controls `align-items` CSS property, `'center'` by default */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `flex-wrap` CSS property, `'wrap'` by default */\n  wrap?: React.CSSProperties['flexWrap'];\n\n  /** Key of `theme.spacing` or any valid CSS value for `gap`, numbers are converted to rem, `'md'` by default */\n  gap?: MantineSpacing;\n\n  /** Determines whether each child element should have `flex-grow: 1` style, `false` by default */\n  grow?: boolean;\n\n  /** Determines whether children should take only dedicated amount of space (`max-width` style is set based on the number of children), `true` by default */\n  preventGrowOverflow?: boolean;\n}\n\nexport type GroupFactory = Factory<{\n  props: GroupProps;\n  ref: HTMLDivElement;\n  stylesNames: GroupStylesNames;\n  vars: GroupCssVariables;\n  ctx: GroupStylesCtx;\n}>;\n\nconst defaultProps: Partial<GroupProps> = {\n  preventGrowOverflow: true,\n  gap: 'md',\n  align: 'center',\n  justify: 'flex-start',\n  wrap: 'wrap',\n};\n\nconst varsResolver = createVarsResolver<GroupFactory>(\n  (_, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({\n    root: {\n      '--group-child-width': grow && preventGrowOverflow ? childWidth : undefined,\n      '--group-gap': getSpacing(gap),\n      '--group-align': align,\n      '--group-justify': justify,\n      '--group-wrap': wrap,\n    },\n  })\n);\n\nexport const Group = factory<GroupFactory>((_props, ref) => {\n  const props = useProps('Group', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    ...others\n  } = props;\n\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? 'md');\n  const childWidth = `calc(${\n    100 / childrenCount\n  }% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n\n  const stylesCtx: GroupStylesCtx = { childWidth };\n\n  const getStyles = useStyles<GroupFactory>({\n    name: 'Group',\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      variant={variant}\n      mod={{ grow }}\n      size={__size}\n      {...others}\n    >\n      {filteredChildren}\n    </Box>\n  );\n});\n\nGroup.classes = classes;\nGroup.displayName = '@mantine/core/Group';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,mBAAmB,EAAE,IAAI;EACzBC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,QAAQ;EACfC,OAAO,EAAE,YAAY;EACrBC,IAAI,EAAE;AACR,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,CAAC,EAAAC,IAAA,EAAAC,KAAA;EAAA,IAAE;IAAEC,IAAI;IAAEV,mBAAmB;IAAEC,GAAG;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAI,CAAE,GAAAI,IAAA;EAAA,IAAE;IAAEG;EAAU,CAAE,GAAAF,KAAA;EAAA,OAAM;IAChFG,IAAI,EAAE;MACJ,qBAAqB,EAAEF,IAAI,IAAIV,mBAAmB,GAAGW,UAAU,GAAG,KAAK,CAAC;MACxE,aAAa,EAAEE,UAAU,CAACZ,GAAG,CAAC;MAC9B,eAAe,EAAEC,KAAK;MACtB,iBAAiB,EAAEC,OAAO;MAC1B,cAAc,EAAEC;IACjB;EACL,CAAG;AAAA,CACH,CAAC;AACW,MAACU,KAAK,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC5C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,OAAO,EAAEpB,YAAY,EAAEiB,MAAM,CAAC;EACrD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRxB,GAAG;IACHC,KAAK;IACLC,OAAO;IACPC,IAAI;IACJM,IAAI;IACJV,mBAAmB;IACnB0B,IAAI;IACJC,OAAO;IACPC,MAAM;IACN,GAAGC;EACJ,IAAGX,KAAK;EACT,MAAMY,gBAAgB,GAAGC,mBAAmB,CAACN,QAAQ,CAAC;EACtD,MAAMO,aAAa,GAAGF,gBAAgB,CAACG,MAAM;EAC7C,MAAMC,WAAW,GAAGrB,UAAU,CAACZ,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI,IAAI,CAAC;EAC3C,MAAMU,UAAU,WAAAwB,MAAA,CAAW,GAAG,GAAGH,aAAa,WAAAG,MAAA,CAAQD,WAAW,SAAAC,MAAA,CAAMD,WAAW,SAAAC,MAAA,CAAMH,aAAa,OAAI;EACzG,MAAMI,SAAS,GAAG;IAAEzB;EAAU,CAAE;EAChC,MAAM0B,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,OAAO;IACbrB,KAAK;IACLkB,SAAS;IACTf,SAAS;IACTC,KAAK;IACLkB,OAAO;IACPpB,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRE,IAAI;IACJrB;EACJ,CAAG,CAAC;EACF,sBAAuBoC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGN,SAAS,CAAC,MAAM,CAAC;IACpBpB,GAAG;IACHU,OAAO;IACPiB,GAAG,EAAE;MAAElC;IAAM;IACbmC,IAAI,EAAEjB,MAAM;IACZ,GAAGC;EACJ,GACDC,gBACJ,CAAG;AACH,CAAC,CAAE;AACHhB,KAAK,CAAC0B,OAAO,GAAGA,OAAO;AACvB1B,KAAK,CAACgC,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}