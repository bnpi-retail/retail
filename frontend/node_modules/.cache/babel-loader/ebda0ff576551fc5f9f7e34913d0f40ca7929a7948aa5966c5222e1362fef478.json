{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { createPolymorphicComponent } from '../factory/create-polymorphic-component.mjs';\nimport { InlineStyles } from '../InlineStyles/InlineStyles.mjs';\nimport { isNumberLike } from '../utils/is-number-like/is-number-like.mjs';\nimport '@mantine/hooks';\nimport '../MantineProvider/Mantine.context.mjs';\nimport '../MantineProvider/default-theme.mjs';\nimport '../MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { getBoxMod } from './get-box-mod/get-box-mod.mjs';\nimport { getBoxStyle } from './get-box-style/get-box-style.mjs';\nimport { extractStyleProps } from './style-props/extract-style-props/extract-style-props.mjs';\nimport { STYlE_PROPS_DATA } from './style-props/style-props-data.mjs';\nimport { parseStyleProps } from './style-props/parse-style-props/parse-style-props.mjs';\nimport { useRandomClassName } from './use-random-classname/use-random-classname.mjs';\nconst _Box = forwardRef((_ref, ref) => {\n  let {\n    component,\n    style,\n    __vars,\n    className,\n    variant,\n    mod,\n    size,\n    hiddenFrom,\n    visibleFrom,\n    lightHidden,\n    darkHidden,\n    renderRoot,\n    ...others\n  } = _ref;\n  const theme = useMantineTheme();\n  const Element = component || \"div\";\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const responsiveClassName = useRandomClassName();\n  const parsedStyleProps = parseStyleProps({\n    styleProps,\n    theme,\n    data: STYlE_PROPS_DATA\n  });\n  const props = {\n    ref,\n    style: getBoxStyle({\n      theme,\n      style,\n      vars: __vars,\n      styleProps: parsedStyleProps.inlineStyles\n    }),\n    className: cx(className, {\n      [responsiveClassName]: parsedStyleProps.hasResponsiveStyles,\n      \"mantine-light-hidden\": lightHidden,\n      \"mantine-dark-hidden\": darkHidden,\n      [\"mantine-hidden-from-\".concat(hiddenFrom)]: hiddenFrom,\n      [\"mantine-visible-from-\".concat(visibleFrom)]: visibleFrom\n    }),\n    \"data-variant\": variant,\n    \"data-size\": isNumberLike(size) ? void 0 : size || void 0,\n    ...getBoxMod(mod),\n    ...rest\n  };\n  return /* @__PURE__ */React.createElement(React.Fragment, null, parsedStyleProps.hasResponsiveStyles && /* @__PURE__ */React.createElement(InlineStyles, {\n    selector: \".\".concat(responsiveClassName),\n    styles: parsedStyleProps.styles,\n    media: parsedStyleProps.media\n  }), typeof renderRoot === \"function\" ? renderRoot(props) : /* @__PURE__ */React.createElement(Element, {\n    ...props\n  }));\n});\n_Box.displayName = \"@mantine/core/Box\";\nconst Box = createPolymorphicComponent(_Box);\nexport { Box };","map":{"version":3,"names":["_Box","forwardRef","_ref","ref","component","style","__vars","className","variant","mod","size","hiddenFrom","visibleFrom","lightHidden","darkHidden","renderRoot","others","theme","useMantineTheme","Element","styleProps","rest","extractStyleProps","responsiveClassName","useRandomClassName","parsedStyleProps","parseStyleProps","data","STYlE_PROPS_DATA","props","getBoxStyle","vars","inlineStyles","cx","hasResponsiveStyles","concat","isNumberLike","getBoxMod","React","createElement","Fragment","InlineStyles","selector","styles","media","displayName","Box","createPolymorphicComponent"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/core/Box/Box.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { createPolymorphicComponent } from '../factory';\nimport { InlineStyles } from '../InlineStyles';\nimport { MantineBreakpoint, useMantineTheme } from '../MantineProvider';\nimport { isNumberLike } from '../utils';\nimport type { CssVarsProp, MantineStyleProp } from './Box.types';\nimport { getBoxMod } from './get-box-mod/get-box-mod';\nimport { getBoxStyle } from './get-box-style/get-box-style';\nimport {\n  extractStyleProps,\n  MantineStyleProps,\n  parseStyleProps,\n  STYlE_PROPS_DATA,\n} from './style-props';\nimport { useRandomClassName } from './use-random-classname/use-random-classname';\n\nexport type Mod = Record<string, any> | string;\nexport type BoxMod = Mod | Mod[] | BoxMod[];\n\nexport interface BoxProps extends MantineStyleProps {\n  /** Class added to the root element, if applicable */\n  className?: string;\n\n  /** Inline style added to root component element, can subscribe to theme defined on MantineProvider */\n  style?: MantineStyleProp;\n\n  /** CSS variables defined on root component element */\n  __vars?: CssVarsProp;\n\n  /** Breakpoint above which the component is hidden with `display: none` */\n  hiddenFrom?: MantineBreakpoint;\n\n  /** Breakpoint below which the component is hidden with `display: none` */\n  visibleFrom?: MantineBreakpoint;\n\n  /** Determines whether component should be hidden in light color scheme with `display: none` */\n  lightHidden?: boolean;\n\n  /** Determines whether component should be hidden in dark color scheme with `display: none` */\n  darkHidden?: boolean;\n}\n\nexport type ElementProps<\n  ElementType extends React.ElementType,\n  PropsToOmit extends string = never,\n> = Omit<React.ComponentPropsWithoutRef<ElementType>, 'style' | PropsToOmit>;\n\nexport interface BoxComponentProps extends BoxProps {\n  /** Variant passed from parent component, sets `data-variant` */\n  variant?: string;\n\n  /** Size passed from parent component, sets `data-size` if value is not number like */\n  size?: string | number;\n\n  /** Element modifiers transformed into `data-` attributes, for example, `{ 'data-size': 'xl' }`, falsy values are removed */\n  mod?: BoxMod;\n}\n\nconst _Box = forwardRef<\n  HTMLDivElement,\n  BoxComponentProps & { component: any; className: string; renderRoot: any }\n>(\n  (\n    {\n      component,\n      style,\n      __vars,\n      className,\n      variant,\n      mod,\n      size,\n      hiddenFrom,\n      visibleFrom,\n      lightHidden,\n      darkHidden,\n      renderRoot,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useMantineTheme();\n    const Element = component || 'div';\n    const { styleProps, rest } = extractStyleProps(others);\n    const responsiveClassName = useRandomClassName();\n    const parsedStyleProps = parseStyleProps({\n      styleProps,\n      theme,\n      data: STYlE_PROPS_DATA,\n    });\n\n    const props = {\n      ref,\n      style: getBoxStyle({\n        theme,\n        style,\n        vars: __vars,\n        styleProps: parsedStyleProps.inlineStyles,\n      }),\n      className: cx(className, {\n        [responsiveClassName]: parsedStyleProps.hasResponsiveStyles,\n        'mantine-light-hidden': lightHidden,\n        'mantine-dark-hidden': darkHidden,\n        [`mantine-hidden-from-${hiddenFrom}`]: hiddenFrom,\n        [`mantine-visible-from-${visibleFrom}`]: visibleFrom,\n      }),\n      'data-variant': variant,\n      'data-size': isNumberLike(size) ? undefined : size || undefined,\n      ...getBoxMod(mod),\n      ...rest,\n    };\n\n    return (\n      <>\n        {parsedStyleProps.hasResponsiveStyles && (\n          <InlineStyles\n            selector={`.${responsiveClassName}`}\n            styles={parsedStyleProps.styles}\n            media={parsedStyleProps.media}\n          />\n        )}\n\n        {typeof renderRoot === 'function' ? renderRoot(props) : <Element {...props} />}\n      </>\n    );\n  }\n);\n\n_Box.displayName = '@mantine/core/Box';\n\nexport const Box = createPolymorphicComponent<'div', BoxComponentProps>(_Box);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAeA,MAAMA,IAAI,GAAGC,UAAU,CACrB,CAAAC,IAAA,EAcGC,GAAG,KAAK;EAAA,IAdV;IACCC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,SAAS;IACTC,OAAO;IACPC,GAAG;IACHC,IAAI;IACJC,UAAU;IACVC,WAAW;IACXC,WAAW;IACXC,UAAU;IACVC,UAAU;IACV,GAAGC;EACJ,IAAAd,IAAA;EACC,MAAMe,KAAK,GAAGC,eAAe,EAAE;EAC/B,MAAMC,OAAO,GAAGf,SAAS,IAAI,KAAK;EAClC,MAAM;IAAEgB,UAAU;IAAEC;EAAM,IAAGC,iBAAiB,CAACN,MAAM,CAAC;EACtD,MAAMO,mBAAmB,GAAGC,kBAAkB,EAAE;EAChD,MAAMC,gBAAgB,GAAGC,eAAe,CAAC;IACvCN,UAAU;IACVH,KAAK;IACLU,IAAI,EAAEC;EACZ,CAAK,CAAC;EACF,MAAMC,KAAK,GAAG;IACZ1B,GAAG;IACHE,KAAK,EAAEyB,WAAW,CAAC;MACjBb,KAAK;MACLZ,KAAK;MACL0B,IAAI,EAAEzB,MAAM;MACZc,UAAU,EAAEK,gBAAgB,CAACO;IACrC,CAAO,CAAC;IACFzB,SAAS,EAAE0B,EAAE,CAAC1B,SAAS,EAAE;MACvB,CAACgB,mBAAmB,GAAGE,gBAAgB,CAACS,mBAAmB;MAC3D,sBAAsB,EAAErB,WAAW;MACnC,qBAAqB,EAAEC,UAAU;MACjC,wBAAAqB,MAAA,CAAwBxB,UAAU,IAAKA,UAAU;MACjD,yBAAAwB,MAAA,CAAyBvB,WAAW,IAAKA;IACjD,CAAO,CAAC;IACF,cAAc,EAAEJ,OAAO;IACvB,WAAW,EAAE4B,YAAY,CAAC1B,IAAI,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,IAAI,KAAK,CAAC;IACzD,GAAG2B,SAAS,CAAC5B,GAAG,CAAC;IACjB,GAAGY;EACT,CAAK;EACD,sBAAuBiB,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAEf,gBAAgB,CAACS,mBAAmB,IAAoB,eAAAI,KAAK,CAACC,aAAa,CAC1IE,YAAY,EACZ;IACEC,QAAQ,MAAAP,MAAA,CAAMZ,mBAAmB,CAAE;IACnCoB,MAAM,EAAElB,gBAAgB,CAACkB,MAAM;IAC/BC,KAAK,EAAEnB,gBAAgB,CAACmB;EACzB,CACF,GAAE,OAAO7B,UAAU,KAAK,UAAU,GAAGA,UAAU,CAACc,KAAK,CAAC,kBAAmBS,KAAK,CAACC,aAAa,CAACpB,OAAO,EAAE;IAAE,GAAGU;EAAK,CAAE,CAAC,CAAC;AACtH,CACH,CAAC;AACD7B,IAAI,CAAC6C,WAAW,GAAG,mBAAmB;AAC1B,MAACC,GAAG,GAAGC,0BAA0B,CAAC/C,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}