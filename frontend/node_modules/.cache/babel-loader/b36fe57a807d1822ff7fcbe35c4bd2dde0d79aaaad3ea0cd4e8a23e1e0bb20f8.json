{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { createScopedKeydownHandler } from '../../../core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useAccordionContext } from '../Accordion.context.mjs';\nimport { useAccordionItemContext } from '../AccordionItem.context.mjs';\nimport classes from '../Accordion.module.css.mjs';\nconst defaultProps = {};\nconst AccordionControl = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    chevron,\n    icon,\n    onClick,\n    onKeyDown,\n    children,\n    disabled,\n    ...others\n  } = useProps(\"AccordionControl\", defaultProps, props);\n  const {\n    value\n  } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n  const isActive = ctx.isItemActive(value);\n  const shouldWrapWithHeading = typeof ctx.order === \"number\";\n  const Heading = \"h\".concat(ctx.order);\n  const content = /* @__PURE__ */React.createElement(UnstyledButton, {\n    ...others,\n    ...ctx.getStyles(\"control\", {\n      className,\n      classNames,\n      style,\n      styles,\n      variant: ctx.variant\n    }),\n    unstyled: ctx.unstyled,\n    mod: [\"accordion-control\", {\n      active: isActive,\n      \"chevron-position\": ctx.chevronPosition,\n      disabled\n    }],\n    ref,\n    onClick: event => {\n      onClick === null || onClick === void 0 || onClick(event);\n      ctx.onChange(value);\n    },\n    type: \"button\",\n    disabled,\n    \"aria-expanded\": isActive,\n    \"aria-controls\": ctx.getRegionId(value),\n    id: ctx.getControlId(value),\n    onKeyDown: createScopedKeydownHandler({\n      siblingSelector: \"[data-accordion-control]\",\n      parentSelector: \"[data-accordion]\",\n      activateOnFocus: false,\n      loop: ctx.loop,\n      orientation: \"vertical\",\n      onKeyDown\n    })\n  }, /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    mod: {\n      rotate: !ctx.disableChevronRotation && isActive,\n      position: ctx.chevronPosition\n    },\n    ...ctx.getStyles(\"chevron\", {\n      classNames,\n      styles\n    })\n  }, chevron || ctx.chevron), /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"label\", {\n      classNames,\n      styles\n    })\n  }, children), icon && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    mod: {\n      \"chevron-position\": ctx.chevronPosition\n    },\n    ...ctx.getStyles(\"icon\", {\n      classNames,\n      styles\n    })\n  }, icon));\n  return shouldWrapWithHeading ? /* @__PURE__ */React.createElement(Heading, {\n    ...ctx.getStyles(\"itemTitle\", {\n      classNames,\n      styles\n    })\n  }, content) : content;\n});\nAccordionControl.displayName = \"@mantine/core/AccordionControl\";\nAccordionControl.classes = classes;\nexport { AccordionControl };","map":{"version":3,"names":["defaultProps","AccordionControl","factory","props","ref","classNames","className","style","styles","vars","chevron","icon","onClick","onKeyDown","children","disabled","others","useProps","value","useAccordionItemContext","ctx","useAccordionContext","isActive","isItemActive","shouldWrapWithHeading","order","Heading","concat","content","React","createElement","UnstyledButton","getStyles","variant","unstyled","mod","active","chevronPosition","event","onChange","type","getRegionId","id","getControlId","createScopedKeydownHandler","siblingSelector","parentSelector","activateOnFocus","loop","orientation","Box","component","rotate","disableChevronRotation","position","displayName","classes"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Accordion/AccordionControl/AccordionControl.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useAccordionContext } from '../Accordion.context';\nimport { useAccordionItemContext } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionControlStylesNames = 'control' | 'chevron' | 'label' | 'itemTitle' | 'icon';\n\nexport interface AccordionControlProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionControlFactory>,\n    ElementProps<'button'> {\n  /** Disables control button */\n  disabled?: boolean;\n\n  /** Custom chevron icon */\n  chevron?: React.ReactNode;\n\n  /** Control label */\n  children?: React.ReactNode;\n\n  /** Icon displayed next to the label */\n  icon?: React.ReactNode;\n}\n\nexport type AccordionControlFactory = Factory<{\n  props: AccordionControlProps;\n  ref: HTMLButtonElement;\n  stylesNames: AccordionControlStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionControlProps> = {};\n\nexport const AccordionControl = factory<AccordionControlFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    chevron,\n    icon,\n    onClick,\n    onKeyDown,\n    children,\n    disabled,\n    ...others\n  } = useProps('AccordionControl', defaultProps, props);\n\n  const { value } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n  const isActive = ctx.isItemActive(value);\n  const shouldWrapWithHeading = typeof ctx.order === 'number';\n  const Heading = `h${ctx.order!}` as const;\n\n  const content = (\n    <UnstyledButton<'button'>\n      {...others}\n      {...ctx.getStyles('control', { className, classNames, style, styles, variant: ctx.variant })}\n      unstyled={ctx.unstyled}\n      mod={[\n        'accordion-control',\n        { active: isActive, 'chevron-position': ctx.chevronPosition, disabled },\n      ]}\n      ref={ref}\n      onClick={(event) => {\n        onClick?.(event);\n        ctx.onChange(value);\n      }}\n      type=\"button\"\n      disabled={disabled}\n      aria-expanded={isActive}\n      aria-controls={ctx.getRegionId(value)}\n      id={ctx.getControlId(value)}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[data-accordion-control]',\n        parentSelector: '[data-accordion]',\n        activateOnFocus: false,\n        loop: ctx.loop,\n        orientation: 'vertical',\n        onKeyDown,\n      })}\n    >\n      <Box\n        component=\"span\"\n        mod={{ rotate: !ctx.disableChevronRotation && isActive, position: ctx.chevronPosition }}\n        {...ctx.getStyles('chevron', { classNames, styles })}\n      >\n        {chevron || ctx.chevron}\n      </Box>\n      <span {...ctx.getStyles('label', { classNames, styles })}>{children}</span>\n      {icon && (\n        <Box\n          component=\"span\"\n          mod={{ 'chevron-position': ctx.chevronPosition }}\n          {...ctx.getStyles('icon', { classNames, styles })}\n        >\n          {icon}\n        </Box>\n      )}\n    </UnstyledButton>\n  );\n\n  return shouldWrapWithHeading ? (\n    <Heading {...ctx.getStyles('itemTitle', { classNames, styles })}>{content}</Heading>\n  ) : (\n    content\n  );\n});\n\nAccordionControl.displayName = '@mantine/core/AccordionControl';\nAccordionControl.classes = classes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}