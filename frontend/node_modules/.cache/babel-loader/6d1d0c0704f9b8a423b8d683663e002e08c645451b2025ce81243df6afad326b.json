{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Fieldset.module.css.mjs';\nconst defaultProps = {\n  variant: \"default\"\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    radius\n  } = _ref;\n  return {\n    root: {\n      \"--fieldset-radius\": radius === void 0 ? void 0 : getRadius(radius)\n    }\n  };\n});\nconst Fieldset = factory((_props, ref) => {\n  const props = useProps(\"Fieldset\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    legend,\n    variant,\n    children,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Fieldset\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"fieldset\",\n    ref,\n    variant,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    ...others\n  }, legend && /* @__PURE__ */React.createElement(\"legend\", {\n    ...getStyles(\"legend\", {\n      variant\n    })\n  }, legend), children);\n});\nFieldset.classes = classes;\nFieldset.displayName = \"@mantine/core/Fieldset\";\nexport { Fieldset };","map":{"version":3,"names":["defaultProps","variant","varsResolver","createVarsResolver","_","_ref","radius","root","getRadius","Fieldset","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","legend","children","others","getStyles","useStyles","name","classes","React","createElement","Box","component","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Fieldset/Fieldset.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Fieldset.module.css';\n\nexport type FieldsetStylesNames = 'root' | 'legend';\nexport type FieldsetVariant = 'default' | 'filled' | 'unstyled';\nexport type FieldsetCSSVariables = {\n  root: '--fieldset-radius';\n};\n\nexport interface FieldsetProps\n  extends BoxProps,\n    StylesApiProps<FieldsetFactory>,\n    ElementProps<'fieldset'> {\n  /** Fieldset legend */\n  legend?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n}\n\nexport type FieldsetFactory = Factory<{\n  props: FieldsetProps;\n  ref: HTMLFieldSetElement;\n  stylesNames: FieldsetStylesNames;\n  vars: FieldsetCSSVariables;\n  variant: FieldsetVariant;\n}>;\n\nconst defaultProps: Partial<FieldsetProps> = {\n  variant: 'default',\n};\n\nconst varsResolver = createVarsResolver<FieldsetFactory>((_, { radius }) => ({\n  root: {\n    '--fieldset-radius': radius === undefined ? undefined : getRadius(radius),\n  },\n}));\n\nexport const Fieldset = factory<FieldsetFactory>((_props, ref) => {\n  const props = useProps('Fieldset', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    legend,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FieldsetFactory>({\n    name: 'Fieldset',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      component=\"fieldset\"\n      ref={ref}\n      variant={variant}\n      {...getStyles('root', { variant })}\n      {...others}\n    >\n      {legend && <legend {...getStyles('legend', { variant })}>{legend}</legend>}\n      {children}\n    </Box>\n  );\n});\n\nFieldset.classes = classes;\nFieldset.displayName = '@mantine/core/Fieldset';\n"],"mappings":";;;;;;;;;;;;;;;;;AAWA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAAC,IAAA;EAAA,IAAE;IAAEC;EAAM,CAAE,GAAAD,IAAA;EAAA,OAAM;IAC1DE,IAAI,EAAE;MACJ,mBAAmB,EAAED,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGE,SAAS,CAACF,MAAM;IACnE;EACH,CAAC;AAAA,CAAC,CAAC;AACS,MAACG,QAAQ,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC/C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,UAAU,EAAEd,YAAY,EAAEW,MAAM,CAAC;EACxD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,MAAM;IACNpB,OAAO;IACPqB,QAAQ;IACR,GAAGC;EACJ,IAAGV,KAAK;EACT,MAAMW,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,UAAU;IAChBC,OAAO;IACPd,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJlB;EACJ,CAAG,CAAC;EACF,sBAAuB0B,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEC,SAAS,EAAE,UAAU;IACrBnB,GAAG;IACHX,OAAO;IACP,GAAGuB,SAAS,CAAC,MAAM,EAAE;MAAEvB;IAAO,CAAE,CAAC;IACjC,GAAGsB;EACJ,GACDF,MAAM,mBAAoBO,KAAK,CAACC,aAAa,CAAC,QAAQ,EAAE;IAAE,GAAGL,SAAS,CAAC,QAAQ,EAAE;MAAEvB;IAAO,CAAE;EAAC,CAAE,EAAEoB,MAAM,CAAC,EACxGC,QACJ,CAAG;AACH,CAAC,CAAE;AACHb,QAAQ,CAACkB,OAAO,GAAGA,OAAO;AAC1BlB,QAAQ,CAACuB,WAAW,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}