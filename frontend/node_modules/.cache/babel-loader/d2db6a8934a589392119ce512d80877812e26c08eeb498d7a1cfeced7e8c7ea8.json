{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { TableTd, TableTh, TableTr, TableThead, TableTbody, TableTfoot, TableCaption } from './Table.components.mjs';\nimport { TableProvider } from './Table.context.mjs';\nimport { TableDataRenderer } from './TableDataRenderer.mjs';\nimport { TableScrollContainer } from './TableScrollContainer.mjs';\nimport classes from './Table.module.css.mjs';\nconst defaultProps = {\n  withRowBorders: true,\n  verticalSpacing: 7\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    layout,\n    captionSide,\n    horizontalSpacing,\n    verticalSpacing,\n    borderColor,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    stickyHeaderOffset,\n    stickyHeader\n  } = _ref;\n  return {\n    table: {\n      \"--table-layout\": layout,\n      \"--table-caption-side\": captionSide,\n      \"--table-horizontal-spacing\": getSpacing(horizontalSpacing),\n      \"--table-vertical-spacing\": getSpacing(verticalSpacing),\n      \"--table-border-color\": borderColor ? getThemeColor(borderColor, theme) : void 0,\n      \"--table-striped-color\": striped && stripedColor ? getThemeColor(stripedColor, theme) : void 0,\n      \"--table-highlight-on-hover-color\": highlightOnHover && highlightOnHoverColor ? getThemeColor(highlightOnHoverColor, theme) : void 0,\n      \"--table-sticky-header-offset\": stickyHeader ? rem(stickyHeaderOffset) : void 0\n    }\n  };\n});\nconst Table = factory((_props, ref) => {\n  const props = useProps(\"Table\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Table\",\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"table\",\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(TableProvider, {\n    value: {\n      getStyles,\n      stickyHeader,\n      striped: striped === true ? \"odd\" : striped || void 0,\n      highlightOnHover,\n      withColumnBorders,\n      withRowBorders,\n      captionSide: captionSide || \"bottom\"\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    component: \"table\",\n    variant,\n    ref,\n    mod: {\n      \"data-with-table-border\": withTableBorder\n    },\n    ...getStyles(\"table\"),\n    ...others\n  }, children || !!data && /* @__PURE__ */React.createElement(TableDataRenderer, {\n    data\n  })));\n});\nTable.classes = classes;\nTable.displayName = \"@mantine/core/Table\";\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\nexport { Table };","map":{"version":3,"names":["defaultProps","withRowBorders","verticalSpacing","varsResolver","createVarsResolver","theme","_ref","layout","captionSide","horizontalSpacing","borderColor","stripedColor","highlightOnHoverColor","striped","highlightOnHover","stickyHeaderOffset","stickyHeader","table","getSpacing","getThemeColor","rem","Table","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","withColumnBorders","withTableBorder","variant","data","children","others","getStyles","useStyles","name","classes","rootSelector","React","createElement","TableProvider","value","Box","component","mod","TableDataRenderer","displayName","Td","TableTd","Th","TableTh","Tr","TableTr","Thead","TableThead","Tbody","TableTbody","Tfoot","TableTfoot","Caption","TableCaption","ScrollContainer","TableScrollContainer","DataRenderer"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Table/Table.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\nimport { TableProvider } from './Table.context';\nimport { TableDataRenderer } from './TableDataRenderer';\nimport { TableScrollContainer } from './TableScrollContainer';\nimport classes from './Table.module.css';\n\nexport type TableStylesNames =\n  | 'table'\n  | 'thead'\n  | 'tbody'\n  | 'tfoot'\n  | 'tr'\n  | 'th'\n  | 'td'\n  | 'caption';\n\nexport type TableCssVariables = {\n  table:\n    | '--table-layout'\n    | '--table-border-color'\n    | '--table-caption-side'\n    | '--table-horizontal-spacing'\n    | '--table-vertical-spacing'\n    | '--table-striped-color'\n    | '--table-highlight-on-hover-color'\n    | '--table-sticky-header-offset';\n};\n\nexport interface TableData {\n  head?: React.ReactNode[];\n  body?: React.ReactNode[][];\n  foot?: React.ReactNode[];\n  caption?: string;\n}\n\nexport interface TableProps extends BoxProps, StylesApiProps<TableFactory>, ElementProps<'table'> {\n  /** Value of `table-layout` style, `auto` by default */\n  layout?: React.CSSProperties['tableLayout'];\n\n  /** Determines on which side `Table.Caption` is displayed, `bottom` by default */\n  captionSide?: 'top' | 'bottom';\n\n  /** Color of table borders, key of `theme.colors` or any valid CSS color */\n  borderColor?: MantineColor;\n\n  /** Determines whether the table should have outer border, `false` by default */\n  withTableBorder?: boolean;\n\n  /** Determines whether the table should have borders between columns, `false` by default */\n  withColumnBorders?: boolean;\n\n  /** Determines whether the table should have borders between rows, `true` by default */\n  withRowBorders?: boolean;\n\n  /** Horizontal cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  horizontalSpacing?: MantineSpacing;\n\n  /** Vertical cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  verticalSpacing?: MantineSpacing;\n\n  /** Determines whether every odd/even row background should be changed to `strippedColor`, if set to `true`, then `odd` value will be used, `false` by default  */\n  striped?: boolean | 'odd' | 'even';\n\n  /** Background color of striped rows, key of `theme.colors` or any valid CSS color */\n  stripedColor?: MantineColor;\n\n  /** Determines whether table rows background should change to `highlightOnHoverColor` when hovered, `false` by default */\n  highlightOnHover?: boolean;\n\n  /** Background color of table rows when hovered, key of `theme.colors` or any valid CSS color */\n  highlightOnHoverColor?: MantineColor;\n\n  /** Data that should be used to generate table, ignored if `children` prop is set */\n  data?: TableData;\n\n  /** Determines whether `Table.Thead` should be sticky, `false` by default */\n  stickyHeader?: boolean;\n\n  /** Offset from top at which `Table.Thead` should become sticky, `0` by default */\n  stickyHeaderOffset?: number | string;\n}\n\nexport type TableFactory = Factory<{\n  props: TableProps;\n  ref: HTMLTableElement;\n  stylesNames: TableStylesNames;\n  vars: TableCssVariables;\n  staticComponents: {\n    Thead: typeof TableThead;\n    Tbody: typeof TableTbody;\n    Tfoot: typeof TableTfoot;\n    Td: typeof TableTd;\n    Th: typeof TableTh;\n    Tr: typeof TableTr;\n    Caption: typeof TableCaption;\n    ScrollContainer: typeof TableScrollContainer;\n    DataRenderer: typeof TableDataRenderer;\n  };\n}>;\n\nconst defaultProps: Partial<TableProps> = {\n  withRowBorders: true,\n  verticalSpacing: 7,\n};\n\nconst varsResolver = createVarsResolver<TableFactory>(\n  (\n    theme,\n    {\n      layout,\n      captionSide,\n      horizontalSpacing,\n      verticalSpacing,\n      borderColor,\n      stripedColor,\n      highlightOnHoverColor,\n      striped,\n      highlightOnHover,\n      stickyHeaderOffset,\n      stickyHeader,\n    }\n  ) => ({\n    table: {\n      '--table-layout': layout,\n      '--table-caption-side': captionSide,\n      '--table-horizontal-spacing': getSpacing(horizontalSpacing),\n      '--table-vertical-spacing': getSpacing(verticalSpacing),\n      '--table-border-color': borderColor ? getThemeColor(borderColor, theme) : undefined,\n      '--table-striped-color':\n        striped && stripedColor ? getThemeColor(stripedColor, theme) : undefined,\n      '--table-highlight-on-hover-color':\n        highlightOnHover && highlightOnHoverColor\n          ? getThemeColor(highlightOnHoverColor, theme)\n          : undefined,\n      '--table-sticky-header-offset': stickyHeader ? rem(stickyHeaderOffset) : undefined,\n    },\n  })\n);\n\nexport const Table = factory<TableFactory>((_props, ref) => {\n  const props = useProps('Table', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableFactory>({\n    name: 'Table',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'table',\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TableProvider\n      value={{\n        getStyles,\n        stickyHeader,\n        striped: striped === true ? 'odd' : striped || undefined,\n        highlightOnHover,\n        withColumnBorders,\n        withRowBorders,\n        captionSide: captionSide || 'bottom',\n      }}\n    >\n      <Box\n        component=\"table\"\n        variant={variant}\n        ref={ref}\n        mod={{ 'data-with-table-border': withTableBorder }}\n        {...getStyles('table')}\n        {...others}\n      >\n        {children || (!!data && <TableDataRenderer data={data} />)}\n      </Box>\n    </TableProvider>\n  );\n});\n\nTable.classes = classes;\nTable.displayName = '@mantine/core/Table';\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}