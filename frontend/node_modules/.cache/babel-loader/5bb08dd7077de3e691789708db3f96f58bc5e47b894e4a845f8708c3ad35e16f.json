{"ast":null,"code":"'use client';\n\nimport { mergeVars } from './merge-vars.mjs';\nfunction resolveVars(_ref) {\n  var _mergeVars;\n  let {\n    vars,\n    varsResolver,\n    theme,\n    props,\n    stylesCtx,\n    selector,\n    themeName\n  } = _ref;\n  return (_mergeVars = mergeVars([varsResolver === null || varsResolver === void 0 ? void 0 : varsResolver(theme, props, stylesCtx), ...themeName.map(name => {\n    var _theme$components, _theme$components$var;\n    return (_theme$components = theme.components) === null || _theme$components === void 0 || (_theme$components = _theme$components[name]) === null || _theme$components === void 0 || (_theme$components$var = _theme$components.vars) === null || _theme$components$var === void 0 ? void 0 : _theme$components$var.call(_theme$components, theme, props, stylesCtx);\n  }), vars === null || vars === void 0 ? void 0 : vars(theme, props, stylesCtx)])) === null || _mergeVars === void 0 ? void 0 : _mergeVars[selector];\n}\nexport { resolveVars };","map":{"version":3,"names":["resolveVars","_ref","_mergeVars","vars","varsResolver","theme","props","stylesCtx","selector","themeName","mergeVars","map","name","_theme$components","_theme$components$var","components","call"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/core/styles-api/use-styles/get-style/resolve-vars/resolve-vars.ts"],"sourcesContent":["import { CSSProperties } from 'react';\nimport { CssVariable } from '../../../../Box';\nimport { MantineTheme } from '../../../../MantineProvider';\nimport { mergeVars } from './merge-vars';\n\ntype ResolvedVars = Partial<Record<string, Record<CssVariable, string>>>;\n\nexport type VarsResolver = (\n  theme: MantineTheme,\n  props: Record<string, any>,\n  stylesCtx: Record<string, any> | undefined\n) => ResolvedVars;\n\ninterface ResolveVarsInput {\n  vars: VarsResolver | undefined;\n  varsResolver: VarsResolver | undefined;\n  theme: MantineTheme;\n  props: Record<string, any>;\n  stylesCtx: Record<string, any> | undefined;\n  selector: string;\n  themeName: string[];\n}\n\nexport function resolveVars({\n  vars,\n  varsResolver,\n  theme,\n  props,\n  stylesCtx,\n  selector,\n  themeName,\n}: ResolveVarsInput) {\n  return mergeVars([\n    varsResolver?.(theme, props, stylesCtx),\n    ...themeName.map((name) => theme.components?.[name]?.vars?.(theme, props, stylesCtx)),\n    vars?.(theme, props, stylesCtx),\n  ])?.[selector] as CSSProperties;\n}\n"],"mappings":";;;AAEO,SAASA,WAAWA,CAAAC,IAAA,EAQxB;EAAA,IAAAC,UAAA;EAAA,IARyB;IAC1BC,IAAI;IACJC,YAAY;IACZC,KAAK;IACLC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC,GAAAR,IAAA;EACC,QAAAC,UAAA,GAAOQ,SAAS,CAAC,CACfN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAGC,KAAK,EAAEC,KAAK,EAAEC,SAAS,CAAC,EACvC,GAAGE,SAAS,CAACE,GAAG,CAAEC,IAAI;IAAA,IAAAC,iBAAA,EAAAC,qBAAA;IAAA,QAAAD,iBAAA,GAAKR,KAAK,CAACU,UAAU,cAAAF,iBAAA,gBAAAA,iBAAA,GAAhBA,iBAAA,CAAmBD,IAAI,CAAC,cAAAC,iBAAA,gBAAAC,qBAAA,GAAxBD,iBAAA,CAA0BV,IAAI,cAAAW,qBAAA,uBAA9BA,qBAAA,CAAAE,IAAA,CAAAH,iBAAA,EAAiCR,KAAK,EAAEC,KAAK,EAAEC,SAAS,CAAC;EAAA,EAAC,EACrFJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAGE,KAAK,EAAEC,KAAK,EAAEC,SAAS,CAAC,CAChC,CAAC,cAAAL,UAAA,uBAJKA,UAAA,CAIFM,QAAQ,CAAC;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}