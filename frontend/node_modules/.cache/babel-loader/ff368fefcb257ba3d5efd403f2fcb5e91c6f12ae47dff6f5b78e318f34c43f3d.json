{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect, useMemo } from 'react';\nfunction useCallbackRef(callback) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useMemo(() => function () {\n    var _callbackRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n  }, []);\n}\nexport { useCallbackRef };","map":{"version":3,"names":["useCallbackRef","callback","callbackRef","useRef","useEffect","current","useMemo","_callbackRef$current","_len","arguments","length","args","Array","_key","call"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/hooks/src/use-callback-ref/use-callback-ref.ts"],"sourcesContent":["import { useEffect, useMemo, useRef } from 'react';\n\nexport function useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n"],"mappings":";;;AAEO,SAASA,cAAcA,CAACC,QAAQ,EAAE;EACvC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpCG,SAAS,CAAC,MAAM;IACdF,WAAW,CAACG,OAAO,GAAGJ,QAAQ;EAClC,CAAG,CAAC;EACF,OAAOK,OAAO,CAAC,MAAM;IAAA,IAAAC,oBAAA;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,QAAAN,oBAAA,GAAKL,WAAW,CAACG,OAAO,cAAAE,oBAAA,uBAAnBA,oBAAA,CAAAO,IAAA,CAAAZ,WAAW,EAAW,GAAGS,IAAI,CAAC;EAAA,GAAE,EAAE,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}