{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nfunction setColorSchemeAttribute(colorScheme, getRootElement) {\n  var _getRootElement;\n  const computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  (_getRootElement = getRootElement()) === null || _getRootElement === void 0 || _getRootElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n}\nfunction useProviderColorScheme(_ref) {\n  let {\n    manager,\n    defaultColorScheme,\n    getRootElement,\n    forceColorScheme\n  } = _ref;\n  const media = useRef();\n  const [value, setValue] = useState(() => manager.get(defaultColorScheme));\n  const colorSchemeValue = forceColorScheme || value;\n  const setColorScheme = useCallback(colorScheme => {\n    if (!forceColorScheme) {\n      setColorSchemeAttribute(colorScheme, getRootElement);\n      setValue(colorScheme);\n      manager.set(colorScheme);\n    }\n  }, [manager.set, colorSchemeValue, forceColorScheme]);\n  const clearColorScheme = useCallback(() => {\n    setValue(defaultColorScheme);\n    setColorSchemeAttribute(defaultColorScheme, getRootElement);\n    manager.clear();\n  }, [manager.clear, defaultColorScheme]);\n  useEffect(() => {\n    manager.subscribe(setColorScheme);\n    return manager.unsubscribe;\n  }, [manager.subscribe, manager.unsubscribe]);\n  useIsomorphicEffect(() => {\n    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);\n  }, []);\n  useEffect(() => {\n    var _media$current;\n    if (forceColorScheme) {\n      setColorSchemeAttribute(forceColorScheme, getRootElement);\n      return () => {};\n    }\n    media.current = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const listener = event => {\n      if (value === \"auto\") {\n        setColorSchemeAttribute(event.matches ? \"dark\" : \"light\", getRootElement);\n      }\n    };\n    (_media$current = media.current) === null || _media$current === void 0 || _media$current.addEventListener(\"change\", listener);\n    return () => {\n      var _media$current2;\n      return (_media$current2 = media.current) === null || _media$current2 === void 0 ? void 0 : _media$current2.removeEventListener(\"change\", listener);\n    };\n  }, [value, forceColorScheme]);\n  return {\n    colorScheme: colorSchemeValue,\n    setColorScheme,\n    clearColorScheme\n  };\n}\nexport { useProviderColorScheme };","map":{"version":3,"names":["setColorSchemeAttribute","colorScheme","getRootElement","_getRootElement","computedColorScheme","window","matchMedia","matches","setAttribute","useProviderColorScheme","_ref","manager","defaultColorScheme","forceColorScheme","media","useRef","value","setValue","useState","get","colorSchemeValue","setColorScheme","useCallback","set","clearColorScheme","clear","useEffect","subscribe","unsubscribe","useIsomorphicEffect","_media$current","current","listener","event","addEventListener","_media$current2","removeEventListener"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport type { MantineColorSchemeManager } from '../color-scheme-managers';\nimport type { MantineColorScheme } from '../theme.types';\n\nfunction setColorSchemeAttribute(\n  colorScheme: MantineColorScheme,\n  getRootElement: () => HTMLElement | undefined\n) {\n  const computedColorScheme =\n    colorScheme !== 'auto'\n      ? colorScheme\n      : window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light';\n  getRootElement()?.setAttribute('data-mantine-color-scheme', computedColorScheme);\n}\n\ntype MediaQueryCallback = (event: { matches: boolean; media: string }) => void;\n\ninterface UseProviderColorSchemeOptions {\n  manager: MantineColorSchemeManager;\n  defaultColorScheme: MantineColorScheme;\n  forceColorScheme: 'light' | 'dark' | undefined;\n  getRootElement: () => HTMLElement | undefined;\n}\n\nexport function useProviderColorScheme({\n  manager,\n  defaultColorScheme,\n  getRootElement,\n  forceColorScheme,\n}: UseProviderColorSchemeOptions) {\n  const media = useRef<MediaQueryList>();\n  const [value, setValue] = useState(() => manager.get(defaultColorScheme));\n  const colorSchemeValue = forceColorScheme || value;\n\n  const setColorScheme = useCallback(\n    (colorScheme: MantineColorScheme) => {\n      if (!forceColorScheme) {\n        setColorSchemeAttribute(colorScheme, getRootElement);\n        setValue(colorScheme);\n        manager.set(colorScheme);\n      }\n    },\n    [manager.set, colorSchemeValue, forceColorScheme]\n  );\n\n  const clearColorScheme = useCallback(() => {\n    setValue(defaultColorScheme);\n    setColorSchemeAttribute(defaultColorScheme, getRootElement);\n    manager.clear();\n  }, [manager.clear, defaultColorScheme]);\n\n  useEffect(() => {\n    manager.subscribe(setColorScheme);\n    return manager.unsubscribe;\n  }, [manager.subscribe, manager.unsubscribe]);\n\n  useIsomorphicEffect(() => {\n    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);\n  }, []);\n\n  useEffect(() => {\n    if (forceColorScheme) {\n      setColorSchemeAttribute(forceColorScheme, getRootElement);\n      return () => {};\n    }\n\n    media.current = window.matchMedia('(prefers-color-scheme: dark)');\n    const listener: MediaQueryCallback = (event) => {\n      if (value === 'auto') {\n        setColorSchemeAttribute(event.matches ? 'dark' : 'light', getRootElement);\n      }\n    };\n\n    media.current?.addEventListener('change', listener);\n    return () => media.current?.removeEventListener('change', listener);\n  }, [value, forceColorScheme]);\n\n  return { colorScheme: colorSchemeValue, setColorScheme, clearColorScheme };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}