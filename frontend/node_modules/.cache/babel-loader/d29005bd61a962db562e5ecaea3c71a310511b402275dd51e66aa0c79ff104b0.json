{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport cx from 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Text } from '../Text/Text.mjs';\nimport classes from './Anchor.module.css.mjs';\nconst defaultProps = {\n  underline: \"hover\"\n};\nconst Anchor = polymorphicFactory((props, ref) => {\n  const {\n    underline,\n    className,\n    unstyled,\n    ...others\n  } = useProps(\"Anchor\", defaultProps, props);\n  return /* @__PURE__ */React.createElement(Text, {\n    component: \"a\",\n    ref,\n    className: cx({\n      [classes.root]: !unstyled\n    }, className),\n    ...others,\n    mod: {\n      underline\n    },\n    __staticSelector: \"Anchor\",\n    unstyled\n  });\n});\nAnchor.classes = classes;\nAnchor.displayName = \"@mantine/core/Anchor\";\nexport { Anchor };","map":{"version":3,"names":["defaultProps","underline","Anchor","polymorphicFactory","props","ref","className","unstyled","others","useProps","React","createElement","Text","component","cx","classes","root","mod","__staticSelector","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Anchor/Anchor.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { polymorphicFactory, PolymorphicFactory, useProps } from '../../core';\nimport { Text, TextCssVariables, TextProps, TextStylesNames, TextVariant } from '../Text';\nimport classes from './Anchor.module.css';\n\nexport type AnchorStylesNames = TextStylesNames;\nexport type AnchorVariant = TextVariant;\nexport type AnchorCssVariables = TextCssVariables;\n\nexport interface AnchorProps extends Omit<TextProps, 'span'> {\n  /** Determines in which cases link should have `text-decoration: underline` styles, `hover` by default */\n  underline?: 'always' | 'hover' | 'never';\n}\n\nexport type AnchorFactory = PolymorphicFactory<{\n  props: AnchorProps;\n  defaultComponent: 'a';\n  defaultRef: HTMLAnchorElement;\n  stylesNames: AnchorStylesNames;\n  vars: AnchorCssVariables;\n  variant: AnchorVariant;\n}>;\n\nconst defaultProps: Partial<AnchorProps> = {\n  underline: 'hover',\n};\n\nexport const Anchor = polymorphicFactory<AnchorFactory>((props, ref) => {\n  const { underline, className, unstyled, ...others } = useProps('Anchor', defaultProps, props);\n  return (\n    <Text\n      component=\"a\"\n      ref={ref}\n      className={cx({ [classes.root]: !unstyled }, className)}\n      {...others}\n      mod={{ underline }}\n      __staticSelector=\"Anchor\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nAnchor.classes = classes;\nAnchor.displayName = '@mantine/core/Anchor';\n"],"mappings":";;;;;;;;;;;;;;;AAMA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAE;AACb,CAAC;AACW,MAACC,MAAM,GAAGC,kBAAkB,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACvD,MAAM;IAAEJ,SAAS;IAAEK,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CAAC,QAAQ,EAAET,YAAY,EAAEI,KAAK,CAAC;EAC7F,sBAAuBM,KAAK,CAACC,aAAa,CACxCC,IAAI,EACJ;IACEC,SAAS,EAAE,GAAG;IACdR,GAAG;IACHC,SAAS,EAAEQ,EAAE,CAAC;MAAE,CAACC,OAAO,CAACC,IAAI,GAAG,CAACT;IAAU,GAAED,SAAS,CAAC;IACvD,GAAGE,MAAM;IACTS,GAAG,EAAE;MAAEhB;IAAW;IAClBiB,gBAAgB,EAAE,QAAQ;IAC1BX;EACD,CACL,CAAG;AACH,CAAC,CAAE;AACHL,MAAM,CAACa,OAAO,GAAGA,OAAO;AACxBb,MAAM,CAACiB,WAAW,GAAG,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}