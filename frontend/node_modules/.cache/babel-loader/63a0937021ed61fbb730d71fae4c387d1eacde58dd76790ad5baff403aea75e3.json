{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useId } from '@mantine/hooks';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport { getFontSize } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputDescription } from '../InputDescription/InputDescription.mjs';\nimport { InputError } from '../InputError/InputError.mjs';\nimport { InputLabel } from '../InputLabel/InputLabel.mjs';\nimport { InputWrapperProvider } from '../InputWrapper.context.mjs';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets.mjs';\nimport classes from '../Input.module.css.mjs';\nconst defaultProps = {\n  labelElement: \"label\",\n  inputContainer: children => children,\n  inputWrapperOrder: [\"label\", \"description\", \"input\", \"error\"]\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    size\n  } = _ref;\n  return {\n    label: {\n      \"--input-label-size\": getFontSize(size),\n      \"--input-asterisk-color\": void 0\n    },\n    error: {\n      \"--input-error-size\": size === void 0 ? void 0 : \"calc(\".concat(getFontSize(size), \" - \").concat(rem(2), \")\")\n    },\n    description: {\n      \"--input-description-size\": size === void 0 ? void 0 : \"calc(\".concat(getFontSize(size), \" - \").concat(rem(2), \")\")\n    }\n  };\n});\nconst InputWrapper = factory((_props, ref) => {\n  const props = useProps(\"InputWrapper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: [\"InputWrapper\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector\n  };\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === \"boolean\" ? withAsterisk : required;\n  const errorId = (errorProps === null || errorProps === void 0 ? void 0 : errorProps.id) || \"\".concat(idBase, \"-error\");\n  const descriptionId = (descriptionProps === null || descriptionProps === void 0 ? void 0 : descriptionProps.id) || \"\".concat(idBase, \"-description\");\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== \"boolean\";\n  const hasDescription = !!description;\n  const _describedBy = \"\".concat(hasError ? errorId : \"\", \" \").concat(hasDescription ? descriptionId : \"\");\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : void 0;\n  const labelId = (labelProps === null || labelProps === void 0 ? void 0 : labelProps.id) || \"\".concat(idBase, \"-label\");\n  const _label = label && /* @__PURE__ */React.createElement(InputLabel, {\n    key: \"label\",\n    labelElement,\n    id: labelId,\n    htmlFor: inputId,\n    required: isRequired,\n    ...sharedProps,\n    ...labelProps\n  }, label);\n  const _description = hasDescription && /* @__PURE__ */React.createElement(InputDescription, {\n    key: \"description\",\n    ...descriptionProps,\n    ...sharedProps,\n    size: (descriptionProps === null || descriptionProps === void 0 ? void 0 : descriptionProps.size) || sharedProps.size,\n    id: (descriptionProps === null || descriptionProps === void 0 ? void 0 : descriptionProps.id) || descriptionId\n  }, description);\n  const _input = /* @__PURE__ */React.createElement(React.Fragment, {\n    key: \"input\"\n  }, inputContainer(children));\n  const _error = hasError && /* @__PURE__ */React.createElement(InputError, {\n    ...errorProps,\n    ...sharedProps,\n    size: (errorProps === null || errorProps === void 0 ? void 0 : errorProps.size) || sharedProps.size,\n    key: \"error\",\n    id: (errorProps === null || errorProps === void 0 ? void 0 : errorProps.id) || errorId\n  }, error);\n  const content = inputWrapperOrder.map(part => {\n    switch (part) {\n      case \"label\":\n        return _label;\n      case \"input\":\n        return _input;\n      case \"description\":\n        return _description;\n      case \"error\":\n        return _error;\n      default:\n        return null;\n    }\n  });\n  return /* @__PURE__ */React.createElement(InputWrapperProvider, {\n    value: {\n      getStyles,\n      describedBy,\n      inputId,\n      labelId,\n      ...getInputOffsets(inputWrapperOrder, {\n        hasDescription,\n        hasError\n      })\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    variant,\n    size,\n    mod: {\n      error: !!error\n    },\n    ...getStyles(\"root\"),\n    ...others\n  }, content));\n});\nInputWrapper.classes = classes;\nInputWrapper.displayName = \"@mantine/core/InputWrapper\";\nexport { InputWrapper };","map":{"version":3,"names":["defaultProps","labelElement","inputContainer","children","inputWrapperOrder","varsResolver","createVarsResolver","_","_ref","size","label","getFontSize","error","concat","rem","description","InputWrapper","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","variant","__staticSelector","labelProps","descriptionProps","errorProps","withAsterisk","id","required","__stylesApiProps","others","getStyles","useStyles","name","classes","sharedProps","idBase","useId","isRequired","errorId","descriptionId","inputId","hasError","hasDescription","_describedBy","describedBy","trim","length","labelId","_label","React","createElement","InputLabel","key","htmlFor","_description","InputDescription","_input","Fragment","_error","InputError","content","map","part","InputWrapperProvider","value","getInputOffsets","Box","mod","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Input/InputWrapper/InputWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport {\n  InputDescription,\n  InputDescriptionCssVariables,\n  InputDescriptionStylesNames,\n} from '../InputDescription/InputDescription';\nimport {\n  InputError,\n  InputErrorCssVariables,\n  InputErrorStylesNames,\n} from '../InputError/InputError';\nimport {\n  InputLabel,\n  InputLabelCssVariables,\n  InputLabelStylesNames,\n} from '../InputLabel/InputLabel';\nimport { InputWrapperProvider } from '../InputWrapper.context';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets';\nimport classes from '../Input.module.css';\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | 'root'\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component. If not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component. If not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component. If not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether the required asterisk should be displayed. Overrides `required` prop. Does not add required attribute to the input. `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Error` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, `React.Fragment` by default */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: ('label' | 'input' | 'description' | 'error')[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: MantineSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: 'label',\n  inputContainer: (children) => children,\n  inputWrapperOrder: ['label', 'description', 'input', 'error'],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps('InputWrapper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === 'boolean' ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== 'boolean';\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : ''} ${hasDescription ? descriptionId : ''}`;\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = <React.Fragment key=\"input\">{inputContainer!(children)}</React.Fragment>;\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case 'label':\n        return _label;\n      case 'input':\n        return _input;\n      case 'description':\n        return _description;\n      case 'error':\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        mod={{ error: !!error }}\n        {...getStyles('root')}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.classes = classes;\nInputWrapper.displayName = '@mantine/core/InputWrapper';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}