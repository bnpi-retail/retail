{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport classes from './Notification.module.css.mjs';\nconst defaultProps = {\n  withCloseButton: true\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color\n  } = _ref;\n  return {\n    root: {\n      \"--notification-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--notification-color\": color ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Notification = factory((_props, ref) => {\n  const props = useProps(\"Notification\", defaultProps, _props);\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Notification\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    mod: {\n      \"data-with-icon\": !!icon || loading,\n      \"data-with-border\": withBorder\n    },\n    ref,\n    variant,\n    ...others,\n    role: \"alert\"\n  }, icon && !loading && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"icon\")\n  }, icon), loading && /* @__PURE__ */React.createElement(Loader, {\n    size: 28,\n    color,\n    ...getStyles(\"loader\")\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"body\")\n  }, title && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"title\")\n  }, title), /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"description\"),\n    mod: {\n      \"data-with-title\": !!title\n    }\n  }, children)), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    iconSize: 16,\n    color: \"gray\",\n    ...closeButtonProps,\n    unstyled,\n    onClick: onClose,\n    ...getStyles(\"closeButton\")\n  }));\n});\nNotification.classes = classes;\nNotification.displayName = \"@mantine/core/Notification\";\nexport { Notification };","map":{"version":3,"names":["defaultProps","withCloseButton","varsResolver","createVarsResolver","theme","_ref","radius","color","root","getRadius","getThemeColor","Notification","factory","_props","ref","props","useProps","className","loading","withBorder","title","icon","children","onClose","closeButtonProps","classNames","style","styles","unstyled","variant","vars","others","getStyles","useStyles","name","classes","React","createElement","Box","mod","role","Loader","size","CloseButton","iconSize","onClick","displayName"],"sources":["/home/mark/Desktop/job/retail/retail/frontend/node_modules/@mantine/core/src/components/Notification/Notification.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { Loader } from '../Loader';\nimport classes from './Notification.module.css';\n\nexport type NotificationStylesNames =\n  | 'root'\n  | 'icon'\n  | 'loader'\n  | 'body'\n  | 'title'\n  | 'description'\n  | 'closeButton';\nexport type NotificationCssVariables = {\n  root: '--notification-radius' | '--notification-color';\n};\n\nexport interface NotificationProps\n  extends BoxProps,\n    StylesApiProps<NotificationFactory>,\n    ElementProps<'div', 'title'> {\n  variant?: string;\n\n  /** Called when close button is clicked */\n  onClose?: () => void;\n\n  /** Controls notification line or icon color, key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Determines whether notification should have a border, `false` by default */\n  withBorder?: boolean;\n\n  /** Determines whether close button should be visible, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: Record<string, any>;\n}\n\nexport type NotificationFactory = Factory<{\n  props: NotificationProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationStylesNames;\n  vars: NotificationCssVariables;\n}>;\n\nconst defaultProps: Partial<NotificationProps> = {\n  withCloseButton: true,\n};\n\nconst varsResolver = createVarsResolver<NotificationFactory>((theme, { radius, color }) => ({\n  root: {\n    '--notification-radius': radius === undefined ? undefined : getRadius(radius),\n    '--notification-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Notification = factory<NotificationFactory>((_props, ref) => {\n  const props = useProps('Notification', defaultProps, _props);\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NotificationFactory>({\n    name: 'Notification',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      mod={{\n        'data-with-icon': !!icon || loading,\n        'data-with-border': withBorder,\n      }}\n      ref={ref}\n      variant={variant}\n      {...others}\n      role=\"alert\"\n    >\n      {icon && !loading && <div {...getStyles('icon')}>{icon}</div>}\n      {loading && <Loader size={28} color={color} {...getStyles('loader')} />}\n\n      <div {...getStyles('body')}>\n        {title && <div {...getStyles('title')}>{title}</div>}\n\n        <Box {...getStyles('description')} mod={{ 'data-with-title': !!title }}>\n          {children}\n        </Box>\n      </div>\n\n      {withCloseButton && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          unstyled={unstyled}\n          onClick={onClose}\n          {...getStyles('closeButton')}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.classes = classes;\nNotification.displayName = '@mantine/core/Notification';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAcA,MAAMA,YAAY,GAAG;EACnBC,eAAe,EAAE;AACnB,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,KAAK,EAAAC,IAAA;EAAA,IAAE;IAAEC,MAAM;IAAEC;EAAK,CAAE,GAAAF,IAAA;EAAA,OAAM;IACrEG,IAAI,EAAE;MACJ,uBAAuB,EAAEF,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGG,SAAS,CAACH,MAAM,CAAC;MACvE,sBAAsB,EAAEC,KAAK,GAAGG,aAAa,CAACH,KAAK,EAAEH,KAAK,CAAC,GAAG,KAAK;IACpE;EACH,CAAC;AAAA,CAAC,CAAC;AACS,MAACO,YAAY,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACnD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,cAAc,EAAEhB,YAAY,EAAEa,MAAM,CAAC;EAC5D,MAAM;IACJI,SAAS;IACTV,KAAK;IACLD,MAAM;IACNY,OAAO;IACPjB,eAAe;IACfkB,UAAU;IACVC,KAAK;IACLC,IAAI;IACJC,QAAQ;IACRC,OAAO;IACPC,gBAAgB;IAChBC,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC,IAAI;IACJ,GAAGC;EACJ,IAAGhB,KAAK;EACT,MAAMiB,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,cAAc;IACpBC,OAAO;IACPpB,KAAK;IACLE,SAAS;IACTS,KAAK;IACLD,UAAU;IACVE,MAAM;IACNC,QAAQ;IACRE,IAAI;IACJ5B;EACJ,CAAG,CAAC;EACF,sBAAuBkC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGN,SAAS,CAAC,MAAM,CAAC;IACpBO,GAAG,EAAE;MACH,gBAAgB,EAAE,CAAC,CAAClB,IAAI,IAAIH,OAAO;MACnC,kBAAkB,EAAEC;IACrB;IACDL,GAAG;IACHe,OAAO;IACP,GAAGE,MAAM;IACTS,IAAI,EAAE;EACP,GACDnB,IAAI,IAAI,CAACH,OAAO,mBAAoBkB,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGL,SAAS,CAAC,MAAM;EAAG,GAAEX,IAAI,CAAC,EAC9FH,OAAO,mBAAoBkB,KAAK,CAACC,aAAa,CAACI,MAAM,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEnC,KAAK;IAAE,GAAGyB,SAAS,CAAC,QAAQ;EAAC,CAAE,CAAC,EACnF,eAAAI,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGL,SAAS,CAAC,MAAM;EAAC,CAAE,EAAEZ,KAAK,IAAoB,eAAAgB,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGL,SAAS,CAAC,OAAO;EAAC,CAAE,EAAEZ,KAAK,CAAC,iBAAkBgB,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAE,GAAGN,SAAS,CAAC,aAAa,CAAC;IAAEO,GAAG,EAAE;MAAE,iBAAiB,EAAE,CAAC,CAACnB;IAAK;EAAI,GAAEE,QAAQ,CAAC,CAAC,EACrRrB,eAAe,mBAAoBmC,KAAK,CAACC,aAAa,CACpDM,WAAW,EACX;IACEC,QAAQ,EAAE,EAAE;IACZrC,KAAK,EAAE,MAAM;IACb,GAAGiB,gBAAgB;IACnBI,QAAQ;IACRiB,OAAO,EAAEtB,OAAO;IAChB,GAAGS,SAAS,CAAC,aAAa;EAC3B,CACF,CACL,CAAG;AACH,CAAC,CAAE;AACHrB,YAAY,CAACwB,OAAO,GAAGA,OAAO;AAC9BxB,YAAY,CAACmC,WAAW,GAAG,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}