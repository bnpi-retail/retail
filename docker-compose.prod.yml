version: '3'
services:

  ### Nginx
  nginx:
    restart: always
    build: ./nginx/prod
    ports:
      - 80:80
      - 443:443
      - 9090:9090
    depends_on:
      - web
    networks:
      - odoo-network
      - temporal-network
      - frontend-network
    volumes:
      - ./nginx/certificate/retail.bnpi.dev:/etc/letsencrypt/live/retail.bnpi.dev
      - ./nginx/certificate/retail-temporal.bnpi.dev:/etc/letsencrypt/live/retail-temporal.bnpi.dev
      - ./nginx/certificate/retail-extension.bnpi.dev:/etc/letsencrypt/live/retail-extension.bnpi.dev
      - ./nginx/certificate/retail-react.bnpi.dev:/etc/letsencrypt/live/retail-react.bnpi.dev
      - ./nginx/certificate/retail-cdn.bnpi.dev:/etc/letsencrypt/live/retail-cdn.bnpi.dev
      - /home/sammy/static/images/odoo:/usr/share/nginx/images

  ### Django
  django-db:
    image: postgres:16
    container_name: retail-django-db
    volumes:
      - ./django/db/postgres:/var/lib/postgresql/data/
    ports:
      - 5434:5432
    environment:
      - POSTGRES_DB=${DJANGO_POSTGRES_DB}
      - POSTGRES_PASSWORD=${DJANGO_POSTGRES_PASSWORD}
      - POSTGRES_USER=${DJANGO_POSTGRES_USER}
    networks:
      - django-network

  django-redis:
    volumes:
      - ./django/db/redis:/data
    image: redis:7-alpine
    networks:
      - django-network
      
  django:
    restart: always
    build: ./django
    container_name: retail-django-web
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - ./django/app:/app
    networks:
      - django-network
      - odoo-network

  ### Frontend
  frontend:
    build:
      context: ./frontend
      target: builder-client
    ports:
      - 3000:3000
    volumes:
      - ./frontend/public:/home/node/app/public
      - ./frontend/src:/home/node/app/src
      - ./frontend/package.json:/home/node/app/package.json
    tty: true
    environment:
      NODE_ENV: "development"
    networks:
      - frontend-network
      
  ### Odoo
  db:
    image: postgres:16
    container_name: odoo-db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - odoo-network

  web:
    image: odoo:16
    build: .
    container_name: odoo-web
    depends_on:
      - db
    ports:
      - 8070:8069
    env_file:
      - .env
    volumes:
      - ./data/odoo-data:/var/lib/odoo
      - ./config:/etc/odoo:rw
      - ./addons:/mnt/extra-addons:rw
    tty: true
    command: -- --dev=reload
    restart: always
    networks:
      - odoo-network

  ### Celery
  celery-redis:
    volumes:
        - ./db/redis:/data
    image: redis:7-alpine
    ports:
      - 6379:6379
      
  ### Temporal
  elasticsearch:
    container_name: temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - temporal-network
    expose:
      - 9200
    volumes:
      - /var/lib/elasticsearch/data

  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - temporal-network
    expose:
      - 5432
    volumes:
      - /var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./temporalio-config/dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - temporal-network
    ports:
      - 8080:8080

networks:
  temporal-network:
    driver: bridge
    name: temporal-network
  odoo-network:
  django-network:
  frontend-network:


